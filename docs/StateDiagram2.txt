@startuml
[*] --> init
init : initialise the robot
init -down-> updateSensorData


state updateSensorData {
  [*] --> getLocation
  getLocation -> getLight
  getLight -> getEncoder 
  getEncoder -> readLine
  readLine --> [*]
}

updateSensorData -down-> control

state control {
  [*] -down-> updateCellData : cell not visited.
  [*] -down-> headForDarkness : all cells visited.
  [*] -down-> excecteRoute : Robot has instructions.

  updateCellData -down-> moveToAnotherCell
  updateCellData : mark as visited
  updateCellData : identify walls
  updateCellData : get a Light Reading

  moveToAnotherCell -down-> searchCells
  
  searchCells -down-> [*] : cell notVisited

  searchCells : "Build set of instructions \n to next not searched cell, using recursion."

  searchCells -down-> eastCheck : robot facing South
  searchCells -down-> southCheck : robot facing West
  searchCells -down-> westCheck : robot facing North  
  searchCells -down-> northCheck : robot facing East 

  eastCheck -> searchCells : wall doesn't exist
  eastCheck -down-> southCheck : wall in way
  southCheck -> searchCells : wall doesn't exist
  southCheck -down-> westCheck : wall in way
  westCheck -> searchCells :  wall doesn't exist
  westCheck -down-> northCheck : wall in way
  northCheck -> searchCells :  wall doesn't exist
  northCheck -down-> eastCheck : wall in way

  headForDarkness -down-> [*] : to darkest cell.
}

control -down-> updateHardware

state updateHardware {
  [*] --> setMotors
  setMotors -> updateDisplay
  updateDisplay -> updateLED
  updateLED -> updateSound 
  updateSound --> [*]
}

updateHardware -> updateSensorData : continue
@enduml